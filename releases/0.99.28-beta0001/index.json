{
  "api/Selenium.SelfHealing.DisableHealing.html": {
    "href": "api/Selenium.SelfHealing.DisableHealing.html",
    "title": "Class DisableHealing | Selenium.SelfHealing.v3",
    "keywords": "Class DisableHealing Used to disable healing for a particular operation. [DisableHealing] void PerformFindElementWithNoHealingOperations() { driver.FindElement(By.Id(\"theId\"); } Inheritance Object Attribute DisableHealing Implements _Attribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.Equals(Object) Attribute.GetHashCode() Attribute.Match(Object) Attribute.IsDefaultAttribute() Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : Selenium.SelfHealing Assembly : Selenium.SelfHealing.v4.dll Syntax [Obfuscation(Exclude = true)] [AttributeUsage(AttributeTargets.Class | AttributeTargets.Method | AttributeTargets.Property | AttributeTargets.Field | AttributeTargets.Parameter)] public sealed class DisableHealing : Attribute, _Attribute Implements System.Runtime.InteropServices._Attribute"
  },
  "api/Selenium.SelfHealing.html": {
    "href": "api/Selenium.SelfHealing.html",
    "title": "Namespace Selenium.SelfHealing | Selenium.SelfHealing.v3",
    "keywords": "Namespace Selenium.SelfHealing Classes DisableHealing Used to disable healing for a particular operation. [DisableHealing] void PerformFindElementWithNoHealingOperations() { driver.FindElement(By.Id(\"theId\"); } SelfHealingWebDriver SelfHealingRemoteWebDriver SelfHealingWebDriverFactory Self-Healing WebDriver Factory Interfaces ISearchContextDisabledHealing Performs search FindElement(s) operations with Self-Healing disabled. ISelfHealingWebDriver ISelfHealingWebDriver interface. This is an exact implementation of all interfaces in Selenium.Support v2.53.1.0."
  },
  "api/Selenium.SelfHealing.ISearchContextDisabledHealing.html": {
    "href": "api/Selenium.SelfHealing.ISearchContextDisabledHealing.html",
    "title": "Interface ISearchContextDisabledHealing | Selenium.SelfHealing.v3",
    "keywords": "Interface ISearchContextDisabledHealing Performs search FindElement(s) operations with Self-Healing disabled. Namespace : Selenium.SelfHealing Assembly : Selenium.SelfHealing.v4.dll Syntax public interface ISearchContextDisabledHealing Remarks Used when you need to find the exact element. For example link text with 'Alert' where another close match is not appropriate. Methods FindElement(By) Finds the first OpenQA.Selenium.IWebElement using the given method. Declaration IWebElement FindElement(By by) Parameters Type Name Description OpenQA.Selenium.By by The locating mechanism to use. Returns Type Description OpenQA.Selenium.IWebElement The first matching OpenQA.Selenium.IWebElement on the current context. Exceptions Type Condition OpenQA.Selenium.NoSuchElementException If no element matches the criteria. FindElements(By) Finds all OpenQA.Selenium.IWebElement within the current context using the given mechanism. Declaration ReadOnlyCollection<IWebElement> FindElements(By by) Parameters Type Name Description OpenQA.Selenium.By by The locating mechanism to use. Returns Type Description ReadOnlyCollection < OpenQA.Selenium.IWebElement > A ReadOnlyCollection<T> of all OpenQA.Selenium.IWebElement matching the current criteria, or an empty list if nothing matches."
  },
  "api/Selenium.SelfHealing.ISelfHealingWebDriver.html": {
    "href": "api/Selenium.SelfHealing.ISelfHealingWebDriver.html",
    "title": "Interface ISelfHealingWebDriver | Selenium.SelfHealing.v3",
    "keywords": "Interface ISelfHealingWebDriver ISelfHealingWebDriver interface. This is an exact implementation of all interfaces in Selenium.Support v2.53.1.0. Inherited Members OpenQA.Selenium.IWebDriver.Close() OpenQA.Selenium.IWebDriver.Quit() OpenQA.Selenium.IWebDriver.Manage() OpenQA.Selenium.IWebDriver.Navigate() OpenQA.Selenium.IWebDriver.SwitchTo() OpenQA.Selenium.IWebDriver.Url OpenQA.Selenium.IWebDriver.Title OpenQA.Selenium.IWebDriver.PageSource OpenQA.Selenium.IWebDriver.CurrentWindowHandle OpenQA.Selenium.IWebDriver.WindowHandles OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By) OpenQA.Selenium.ISearchContext.FindElements(OpenQA.Selenium.By) IDisposable.Dispose() OpenQA.Selenium.IJavaScriptExecutor.ExecuteScript(System.String, System.Object[]) OpenQA.Selenium.IJavaScriptExecutor.ExecuteScript(OpenQA.Selenium.PinnedScript, System.Object[]) OpenQA.Selenium.IJavaScriptExecutor.ExecuteAsyncScript(System.String, System.Object[]) OpenQA.Selenium.ITakesScreenshot.GetScreenshot() OpenQA.Selenium.IActionExecutor.PerformActions(System.Collections.Generic.IList<OpenQA.Selenium.Interactions.ActionSequence>) OpenQA.Selenium.IActionExecutor.ResetInputState() OpenQA.Selenium.IActionExecutor.IsActionExecutor OpenQA.Selenium.IAllowsFileDetection.FileDetector OpenQA.Selenium.IHasCapabilities.Capabilities OpenQA.Selenium.Internal.IFindsElement.FindElement(System.String, System.String) OpenQA.Selenium.Internal.IFindsElement.FindElements(System.String, System.String) OpenQA.Selenium.ISupportsPrint.Print(OpenQA.Selenium.PrintOptions) OpenQA.Selenium.IHasCommandExecutor.CommandExecutor OpenQA.Selenium.ICustomDriverCommandExecutor.ExecuteCustomDriverCommand(System.String, System.Collections.Generic.Dictionary<System.String, System.Object>) OpenQA.Selenium.ICustomDriverCommandExecutor.RegisterCustomDriverCommands(System.Collections.Generic.IReadOnlyDictionary<System.String, OpenQA.Selenium.CommandInfo>) OpenQA.Selenium.ICustomDriverCommandExecutor.RegisterCustomDriverCommand(System.String, OpenQA.Selenium.CommandInfo) OpenQA.Selenium.IHasSessionId.SessionId Namespace : Selenium.SelfHealing Assembly : Selenium.SelfHealing.v4.dll Syntax public interface ISelfHealingWebDriver : IWebDriver, ISearchContext, IDisposable, IJavaScriptExecutor, ITakesScreenshot, IActionExecutor, IAllowsFileDetection, IHasCapabilities, IFindsElement, ISupportsPrint, IHasCommandExecutor, ICustomDriverCommandExecutor, IHasSessionId Properties DisableHealing Performs search FindElement(s) operations with Self-Healing disabled. Declaration ISearchContextDisabledHealing DisableHealing { get; } Property Value Type Description ISearchContextDisabledHealing Remarks Used when you need to find the exact element. For example link text with 'Alert' where another close match is not appropriate. OriginalWebDriver This is the IWebDriver you passed to the SelfHealing Engine. You may want to use this driver to perform native operations that are not healed. A better approach would be using driver.DisableHealing.FindElements. This way you still get all the stability updates AutoWait has to offer. Raw Selenium will lead to instability issues. Declaration IWebDriver OriginalWebDriver { get; } Property Value Type Description OpenQA.Selenium.IWebDriver Extension Methods SelfHealingWebDriverFactory.ToSelfHealingDriver(IWebDriver, String)"
  },
  "api/Selenium.SelfHealing.SelfHealingWebDriver.html": {
    "href": "api/Selenium.SelfHealing.SelfHealingWebDriver.html",
    "title": "Class SelfHealingWebDriver | Selenium.SelfHealing.v3",
    "keywords": "Class SelfHealingWebDriver SelfHealingRemoteWebDriver Inheritance Object SelfHealingWebDriver Implements ISelfHealingWebDriver OpenQA.Selenium.IWebDriver OpenQA.Selenium.ISearchContext IDisposable OpenQA.Selenium.IJavaScriptExecutor OpenQA.Selenium.ITakesScreenshot OpenQA.Selenium.IActionExecutor OpenQA.Selenium.IAllowsFileDetection OpenQA.Selenium.IHasCapabilities OpenQA.Selenium.Internal.IFindsElement OpenQA.Selenium.ISupportsPrint OpenQA.Selenium.IHasCommandExecutor OpenQA.Selenium.ICustomDriverCommandExecutor OpenQA.Selenium.IHasSessionId ISearchContextDisabledHealing Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Selenium.SelfHealing Assembly : Selenium.SelfHealing.v4.dll Syntax [Obfuscation(Exclude = true)] public sealed class SelfHealingWebDriver : ISelfHealingWebDriver, IWebDriver, ISearchContext, IDisposable, IJavaScriptExecutor, ITakesScreenshot, IActionExecutor, IAllowsFileDetection, IHasCapabilities, IFindsElement, ISupportsPrint, IHasCommandExecutor, ICustomDriverCommandExecutor, IHasSessionId, ISearchContextDisabledHealing Explicit Interface Implementations IActionExecutor.IsActionExecutor Declaration bool IActionExecutor.IsActionExecutor { get; } Returns Type Description Boolean IActionExecutor.PerformActions(IList<ActionSequence>) Declaration void IActionExecutor.PerformActions(IList<ActionSequence> actionSequenceList) Parameters Type Name Description IList < OpenQA.Selenium.Interactions.ActionSequence > actionSequenceList IActionExecutor.ResetInputState() Declaration void IActionExecutor.ResetInputState() IAllowsFileDetection.FileDetector Declaration IFileDetector IAllowsFileDetection.FileDetector { get; set; } Returns Type Description OpenQA.Selenium.IFileDetector ICustomDriverCommandExecutor.ExecuteCustomDriverCommand(String, Dictionary<String, Object>) Declaration object ICustomDriverCommandExecutor.ExecuteCustomDriverCommand(string driverCommandToExecute, Dictionary<string, object> parameters) Parameters Type Name Description String driverCommandToExecute Dictionary < String , Object > parameters Returns Type Description Object ICustomDriverCommandExecutor.RegisterCustomDriverCommand(String, CommandInfo) Declaration bool ICustomDriverCommandExecutor.RegisterCustomDriverCommand(string commandName, CommandInfo commandInfo) Parameters Type Name Description String commandName OpenQA.Selenium.CommandInfo commandInfo Returns Type Description Boolean ICustomDriverCommandExecutor.RegisterCustomDriverCommands(IReadOnlyDictionary<String, CommandInfo>) Declaration void ICustomDriverCommandExecutor.RegisterCustomDriverCommands(IReadOnlyDictionary<string, CommandInfo> commands) Parameters Type Name Description IReadOnlyDictionary < String , OpenQA.Selenium.CommandInfo > commands IHasCapabilities.Capabilities Declaration ICapabilities IHasCapabilities.Capabilities { get; } Returns Type Description OpenQA.Selenium.ICapabilities IHasCommandExecutor.CommandExecutor Declaration ICommandExecutor IHasCommandExecutor.CommandExecutor { get; } Returns Type Description OpenQA.Selenium.ICommandExecutor IHasSessionId.SessionId Declaration SessionId IHasSessionId.SessionId { get; } Returns Type Description OpenQA.Selenium.SessionId IJavaScriptExecutor.ExecuteAsyncScript(String, Object[]) Declaration object IJavaScriptExecutor.ExecuteAsyncScript(string script, params object[] args) Parameters Type Name Description String script Object [] args Returns Type Description Object IJavaScriptExecutor.ExecuteScript(PinnedScript, Object[]) Declaration object IJavaScriptExecutor.ExecuteScript(PinnedScript script, params object[] args) Parameters Type Name Description OpenQA.Selenium.PinnedScript script Object [] args Returns Type Description Object IJavaScriptExecutor.ExecuteScript(String, Object[]) Declaration object IJavaScriptExecutor.ExecuteScript(string script, params object[] args) Parameters Type Name Description String script Object [] args Returns Type Description Object IFindsElement.FindElement(String, String) Declaration IWebElement IFindsElement.FindElement(string mechanism, string value) Parameters Type Name Description String mechanism String value Returns Type Description OpenQA.Selenium.IWebElement IFindsElement.FindElements(String, String) Declaration ReadOnlyCollection<IWebElement> IFindsElement.FindElements(string mechanism, string value) Parameters Type Name Description String mechanism String value Returns Type Description ReadOnlyCollection < OpenQA.Selenium.IWebElement > ISearchContext.FindElement(By) Finds the first OpenQA.Selenium.IWebElement using the given method. Declaration IWebElement ISearchContext.FindElement(By by) Parameters Type Name Description OpenQA.Selenium.By by The locating mechanism to use. Returns Type Description OpenQA.Selenium.IWebElement The first matching OpenQA.Selenium.IWebElement on the current context. ISearchContext.FindElements(By) Declaration ReadOnlyCollection<IWebElement> ISearchContext.FindElements(By by) Parameters Type Name Description OpenQA.Selenium.By by Returns Type Description ReadOnlyCollection < OpenQA.Selenium.IWebElement > ISupportsPrint.Print(PrintOptions) Declaration PrintDocument ISupportsPrint.Print(PrintOptions options) Parameters Type Name Description OpenQA.Selenium.PrintOptions options Returns Type Description OpenQA.Selenium.PrintDocument ITakesScreenshot.GetScreenshot() Declaration Screenshot ITakesScreenshot.GetScreenshot() Returns Type Description OpenQA.Selenium.Screenshot IWebDriver.Close() Declaration void IWebDriver.Close() IWebDriver.CurrentWindowHandle Declaration string IWebDriver.CurrentWindowHandle { get; } Returns Type Description String IWebDriver.Manage() Declaration IOptions IWebDriver.Manage() Returns Type Description OpenQA.Selenium.IOptions IWebDriver.Navigate() Declaration INavigation IWebDriver.Navigate() Returns Type Description OpenQA.Selenium.INavigation IWebDriver.PageSource Declaration string IWebDriver.PageSource { get; } Returns Type Description String IWebDriver.Quit() Declaration void IWebDriver.Quit() IWebDriver.SwitchTo() Declaration ITargetLocator IWebDriver.SwitchTo() Returns Type Description OpenQA.Selenium.ITargetLocator IWebDriver.Title Declaration string IWebDriver.Title { get; } Returns Type Description String IWebDriver.Url Declaration string IWebDriver.Url { get; set; } Returns Type Description String IWebDriver.WindowHandles Declaration ReadOnlyCollection<string> IWebDriver.WindowHandles { get; } Returns Type Description ReadOnlyCollection < String > ISearchContextDisabledHealing.FindElement(By) Finds the first OpenQA.Selenium.IWebElement using the given method. Declaration IWebElement ISearchContextDisabledHealing.FindElement(By by) Parameters Type Name Description OpenQA.Selenium.By by The locating mechanism to use. Returns Type Description OpenQA.Selenium.IWebElement The first matching OpenQA.Selenium.IWebElement on the current context. ISearchContextDisabledHealing.FindElements(By) Finds all OpenQA.Selenium.IWebElement within the current context using the given mechanism. Declaration ReadOnlyCollection<IWebElement> ISearchContextDisabledHealing.FindElements(By by) Parameters Type Name Description OpenQA.Selenium.By by The locating mechanism to use. Returns Type Description ReadOnlyCollection < OpenQA.Selenium.IWebElement > A ReadOnlyCollection<T> of all OpenQA.Selenium.IWebElement matching the current criteria, or an empty list if nothing matches. ISelfHealingWebDriver.DisableHealing Declaration ISearchContextDisabledHealing ISelfHealingWebDriver.DisableHealing { get; } Returns Type Description ISearchContextDisabledHealing ISelfHealingWebDriver.OriginalWebDriver Declaration IWebDriver ISelfHealingWebDriver.OriginalWebDriver { get; } Returns Type Description OpenQA.Selenium.IWebDriver IDisposable.Dispose() Declaration void IDisposable.Dispose() Implements ISelfHealingWebDriver OpenQA.Selenium.IWebDriver OpenQA.Selenium.ISearchContext System.IDisposable OpenQA.Selenium.IJavaScriptExecutor OpenQA.Selenium.ITakesScreenshot OpenQA.Selenium.IActionExecutor OpenQA.Selenium.IAllowsFileDetection OpenQA.Selenium.IHasCapabilities OpenQA.Selenium.Internal.IFindsElement OpenQA.Selenium.ISupportsPrint OpenQA.Selenium.IHasCommandExecutor OpenQA.Selenium.ICustomDriverCommandExecutor OpenQA.Selenium.IHasSessionId ISearchContextDisabledHealing Extension Methods SelfHealingWebDriverFactory.ToSelfHealingDriver(IWebDriver, String)"
  },
  "api/Selenium.SelfHealing.SelfHealingWebDriverFactory.html": {
    "href": "api/Selenium.SelfHealing.SelfHealingWebDriverFactory.html",
    "title": "Class SelfHealingWebDriverFactory | Selenium.SelfHealing.v3",
    "keywords": "Class SelfHealingWebDriverFactory Self-Healing WebDriver Factory Inheritance Object SelfHealingWebDriverFactory Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Selenium.SelfHealing Assembly : Selenium.SelfHealing.v4.dll Syntax public static class SelfHealingWebDriverFactory Methods ToSelfHealingDriver(IWebDriver, String) Will convert your original WebDriver to a Self-Healing WebDriver. This technology will bring new stability to your Selenium automation. Features Self-Healing, repairing broken selectors at run-time. AutoWait, bring greater stability instantly. Selector Optimization, run-time selector analysis and optimization. Selenium Insights Report. Declaration public static ISelfHealingWebDriver ToSelfHealingDriver(this IWebDriver webDriver, string testName = null) Parameters Type Name Description OpenQA.Selenium.IWebDriver webDriver The original IWebDriver String testName The unique name you would like to give to your Selenium session. Returns Type Description ISelfHealingWebDriver ISelfHealingWebDriver"
  },
  "articles/csharp_coding_standards.html": {
    "href": "articles/csharp_coding_standards.html",
    "title": "C# Coding Standards | Selenium.SelfHealing.v3",
    "keywords": "C# Coding Standards Introduction The coding standard will be used in conjunction with customized version of StyleCop and FxCop [ TODO ] during both development and build process. This will help ensure that the standard is followed by all developers on the team in a consistent manner. \"Any fool can write code that a computer can understand. Good programmers write code that humans understand\". Martin Fowler. Refactoring: Improving the design of existing code. Purpose The aim of this section is to define a set of C# coding standards to be used by CAPS build team to guarantee maximum legibility, reliability, re-usability and homogeneity of our code. Each section is marked Mandatory or Recommended . Mandatory sections, will be enforced during code reviews as well as tools like StyleCop and FxCop , and code will not be considered complete until it is compliant. Scope This section contains general C# coding standards which can be applied to any type of application developed in C#, based on Framework Design Guidelines . It does not pretend to be a tutorial on C#. It only includes a set of limitations and recommendations focused on clarifying the development. Tools Resharper is a great 3rd party code cleanup and style tool. StyleCop analyzes C# srouce code to enforce a set of style and consistency rules and has been integrated into many 3rd party development tools such as Resharper. FxCop is an application that analyzes managed code assemblies (code that targets the .NET Framework common language runtime) and reports information about the assemblies, such as possible design, localization, performance, and security improvements. C# Stylizer does many of the style rules automatically Highlights of Coding Standards This section is not intended to give a summary of all the coding standards that enabled by our customized StyleCop, but to give a highlight of some rules one will possibly meet in daily coding life. It also provides some recommended however not mandatory(which means not enabled in StyleCop) coding standards. File Layout (Recommended) Only one public class is allowed per file. The file name is derived from the class name. Class : Observer Filename: Observer.cs Class Definition Order (Mandatory) The class definition contains class members in the following order, from less restricted scope (public) to more restrictive (private): Nested types, e.g. classes, enum, struct, etc. Field members, e.g. member variables, const, etc. Member functions Constructors Finalizer (Do not use unless absolutely necessary) Methods (Properties, Events, Operations, Overridables, Static) Private nested types Naming (Mandatory) DO use PascalCasing for all public member, type, and namespace names consisting of multiple words. PropertyDescriptor HtmlTag IOStream NOTE : A special case is made for two-letter acronyms in which both letters are capitalized, e.g. IOStream DO use camelCasing for parameter names. propertyDescriptor htmlTag ioStream DO start with underscore for private fields private readonly Guid _userId = Guid.NewGuid(); DO start static readonly fields, constants with capitalized case private static readonly IEntityAccessor EntityAccessor = null; private const string MetadataName = \"MetadataName\"; DO NOT capitalize each word in so-called closed-form compound words . DO have \"Async\" explicitly in the Async method name to notice people how to use it properly Formatting (Mandatory) DO use spaces over tabs, and always show all spaces/tabs in IDE Tips Visual Studio > TOOLS > Options > Text Editor > C# > Tabs > Insert spaces (Tab size: 4) Visual Studio > Edit > Advanced > View White Space DO add using inside namespace declaration namespace Microsoft.Content.Build.BuildWorker.UnitTest { using System; } DO add a space when: for (var i = 0; i < 1; i++) if (a == b) Cross-platform coding Our code should supports multiple operating systems. Don't assume we only run (and develop) on Windows. Code should be sensitvie to the differences between OS's. Here are some specifics to consider. DO use Enviroment.NewLine instead of hard-coding the line break instead of \\r\\n , as Windows uses \\r\\n and OSX/Linux uses \\n . Note Be aware that thes line-endings may cause problems in code when using @\"\" text blocks with line breaks. DO Use Path.Combine() or Path.DirectorySeparatorChar to separate directories. If this is not possible (such as in scripting), use a forward slash / . Windows is more forgiving than Linux in this regard. Unit tests and functional tests Assembly naming The unit tests for the Microsoft.Foo assembly live in the Microsoft.Foo.Tests assembly. The functional tests for the Microsoft.Foo assmebly live in the Microsoft.Foo.FunctionalTests assmebly. In general there should be exactly one unit test assebmly for each product runtime assembly. In general there should be one functional test assembly per repo. Exceptions can be made for both. Unit test class naming Test class names end with Test and live in the same namespace as the class being tested. For example, the unit tests for the Microsoft.Foo.Boo class would be in a Microsoft.Foo.Boo class in the test assembly. Unit test method naming Unit test method names must be descriptive about what is being tested, under what conditions, and what the expectations are . Pascal casing and underscores can be used to improve readability. The following test names are correct: PublicApiArgumentsShouldHaveNotNullAnnotation Public_api_arguments_should_have_not_null_annotation The following test names are incorrect: Test1 Constructor FormatString GetData Unit test structure The contents of every unit test should be split into three distinct stages, optionally separated by these comments: // Arrange // Act // Assert The crucial thing here is the Act stage is exactly one statement. That one statement is nothing more than a call to the one method that you are trying to test. keeping that one statement as simple as possible is also very important. For example, this is not ideal: int result = myObj.CallSomeMethod(GetComplexParam1(), GetComplexParam2(), GetComplexParam3()); This style is not recomended because way too many things can go wrong in this one statement. All the GetComplexParamN() calls can throw for a variety of reasons unrelated to the test itself. It is thus unclear to someone running into a problem why the failure occured. The ideal pattern is to move the complex parameter building into the `Arrange section: // Arrange P1 p1 = GetComplexParam1(); P2 p2 = GetComplexParam2(); P3 p3 = GetComplexParam3(); // Act int result = myObj.CallSomeMethod(p1, p2, p3); // Assert Assert.AreEqual(1234, result); Now the only reason the line with CallSomeMethod() can fail is if the method itself blew up. Testing exception messages In general testing the specific exception message in a unit test is important. This ensures that the exact desired exception is what is being tested rather than a different exception of the same type. In order to verify the exact exception it is important to verify the message. var ex = Assert.Throws<InvalidOperationException>( () => fruitBasket.GetBananaById(1234)); Assert.Equal( \"1234\", ex.Message); Use xUnit.net's plethora of built-in assertions xUnit.net includes many kinds of assertions – please use the most appropriate one for your test. This will make the tests a lot more readable and also allow the test runner report the best possible errors (whether it's local or the CI machine). For example, these are bad: Assert.Equal(true, someBool); Assert.True(\"abc123\" == someString); Assert.True(list1.Length == list2.Length); for (int i = 0; i < list1.Length; i++) { Assert.True( String.Equals list1[i], list2[i], StringComparison.OrdinalIgnoreCase)); } These are good: Assert.True(someBool); Assert.Equal(\"abc123\", someString); // built-in collection assertions! Assert.Equal(list1, list2, StringComparer.OrdinalIgnoreCase); Parallel tests By default all unit test assemblies should run in parallel mode, which is the default. Unit tests shouldn't depend on any shared state, and so should generally be runnable in parallel. If the tests fail in parallel, the first thing to do is to figure out why; do not just disable parallel tests! For functional tests it is reasonable to disable parallel tests."
  },
  "articles/docfx_getting_started.html": {
    "href": "articles/docfx_getting_started.html",
    "title": "Getting Started with docfx | Selenium.SelfHealing.v3",
    "keywords": "Getting Started with docfx Getting Started This is a seed. docfx is an API documentation generator for .NET, currently support C# and VB. It has the ability to extract triple slash comments out from your source code. What's more, it has syntax to link additional files to API to add additional remarks. docfx will scan your source code and your additional conceptual files and generate a complete HTML documentation website for you. docfx provides the flexibility for you to customize the website through templates. We currently have several embedded templates, including websites containing pure static html pages and also website managed by AngularJS. Click \"View Source\" for an API to route to the source code in GitHub (your API must be pushed to GitHub) docfx provide DNX version for cross platform use. docfx can be used within Visual Studio seamlessly. NOTE offical docfx.msbuild nuget package is now in pre-release version. You can also build your own with source code and use it locally. We support Docfx Flavored Markdown(DFM) for writing conceptual files. DFM is 100% compatible with Github Flavored Markdown(GFM) and add several new features including file inclusion , cross reference , and yaml header ."
  },
  "articles/engineering_guidelines.html": {
    "href": "articles/engineering_guidelines.html",
    "title": "Engineering Guidelines | Selenium.SelfHealing.v3",
    "keywords": "Engineering Guidelines Basics Copyright header and license notice All source code files require the following exact header according to its language (please do not make any changes to it). extension: .cs // Copyright (c) Microsoft. All rights reserved. // Licensed under the MIT license. See LICENSE file in the project root for full license information. extension: .js // Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE file in the project root for full license information. extension: .css /* Copyright (c) Microsoft Corporation. All Rights Reserved. Licensed under the MIT License. See License.txt in the project root for license information. */ extension: .tmpl , .tmpl.partial {{!Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE file in the project root for full license information.}} External dependencies This refers to dependencies on projects (i.e. NuGet packages) outside of the docfx repo, and especially outside of Microsoft. Adding new dependencies require additional approval. Current approved dependencies are: Newtonsoft.Json Jint HtmlAgilityPack Nustache YamlDotNet Code reviews and checkins To help ensure that only the highest quality code makes its way into the project, please submit all your code changes to GitHub as PRs. This includes runtime code changes, unit test updates, and deployment scripts. For example, sending a PR for just an update to a unit test might seem like a waste of time but the unit tests are just as important as the product code and as such, reviewing changes to them is also just as important. The advantages are numerous: improving code quality, more visibility on changes and their potential impact, avoiding duplication of effort, and creating general awareness of progress being made in various areas. In general a PR should be signed off(using the 👍 emoticon) by the Owner of that code. To commit the PR to the repo do not use the Big Green Button . Instead, do a typical push that you would use with Git (e.g. local pull, rebase, merge, push). Source Code Management Branch strategy In general: master has the code for the latest release on NuGet.org. (e.g. 1.0.0 , 1.1.0 ) dev has the code that is being worked on but not yet released. This is the branch into which devs normally submit pull requests and merge changes into. We run daily CI towards dev branch and generate pre-release nuget package, e.g. 1.0.1-alpha-9-abcdefsd . hotfix has the code for fixing master bug after it is released. hotfix changes will be merged back to master and dev once it is verified. Solution and project folder structure and naming Solution files go in the repo root. The default entry point is All.sln . Every project also needs a project.json and a matching .xproj file. This project.json is the source of truth for a project's dependencies and configuration options. Solution need to contain solution folders that match the physical folder ( src , test , tools , etc.). Assembly naming pattern The general naming pattern is Microsoft.DocAsCode.<area>.<subarea> . Unit tests We use xUnit.net for all unit testing. Coding Standards Please refer to C# Coding standards for detailed guideline for C# coding standards. TODO Template Coding standards TODO Template Preprocess JS Coding standards"
  },
  "index.html": {
    "href": "index.html",
    "title": "docfx-seed | Selenium.SelfHealing.v3",
    "keywords": "docfx-seed Description This is a sample docfx documentation project. It contains .NET source code and markdown files. docfx.json is the configuration file for running docfx . docfx will generate a static website as similar to http://docascode.github.io/docfx-seed . How to run Under Windows Download and unzip docfx.zip to run docfx.exe directly! Run docfx under current repo! Website will be generated under _site folder. Run any web hosting tool to host _site folder, e.g. docfx serve _site . Cross platform and use dnx As a prerequisite, you will need to install DNVM and DNX . ###Quick Start dnvm upgrade to get the latest dnvm. Add feed https://www.myget.org/F/aspnetrelease/api/v2/ to Nuget.config For Windows, the nuget config file is %AppData%\\NuGet\\NuGet.config . For Linux/OSX, the nuget config file is ~/.config/NuGet/NuGet.config . dnu commands install docfx to install docfx as a command Run docfx under current repo! Website will be generated under _site folder. Run any web hosting tool to host _site folder, e.g. docfx serve _site . Further information about docfx docfx is a tool to generate documentation towards .NET source code and markdown files. Please refer to docfx to get start. The docfx website itself is generated by docfx !"
  },
  "README.html": {
    "href": "README.html",
    "title": "docfx-seed | Selenium.SelfHealing.v3",
    "keywords": "docfx-seed Description This is a sample docfx documentation project. It contains .NET source code and markdown files. docfx.json is the configuration file for running docfx . docfx will generate a static website as similar to http://docascode.github.io/docfx-seed/index.html How to run Under Windows Install from Nuget Install Nuget.exe Create a folder, e.g. C:\\Tools\\docfx , under the folder, nuget install docfx.console Open command line: set PATH=%PATH%;C:\\Tools\\docfx\\docfx.console\\tools docfx docfx-seed\\docfx.json --serve Install from choco Install chocolatey Open command line: choco install docfx docfx docfx-seed\\docfx.json --serve Cross platform Install Mono Install Nuget.exe > mono nuget.exe install docfx.console > mono docfx.console/tools/docfx.exe docfx-seed/docfx.json Further information about docfx docfx is a tool to generate documentation towards .NET source code and markdown files. Please refer to docfx to get start. The docfx website itself is generated by docfx !"
  },
  "restapi/contacts.html": {
    "href": "restapi/contacts.html",
    "title": "Contacts | Selenium.SelfHealing.v3",
    "keywords": "Contacts get contacts You can get a collection of contacts from your tenant. Required scope : Contacts.Read or Contacts.Write Request GET /contacts?api-version Parameters Name Type Value Notes *api-version string 1.6 The version of the Graph API to target. Beginning with version 1.5, the api-version string is represented in major.minor format. Prior releases were represented as date strings: '2013-11-08' and '2013-04-05'. Required. Responses Status Code Description Samples 200 OK. Indicates success. The results are returned in the response body. Mime type: application/json { \"odata.metadata\": \"https://graph.windows.net/myorganization/$metadata#directoryObjects/Microsoft.DirectoryServices.Contact\", \"value\": [ { \"odata.type\": \"Microsoft.DirectoryServices.Contact\", \"objectType\": \"Contact\", \"objectId\": \"31944231-fd52-4a7f-b32e-7902a01fddf9\", \"deletionTimestamp\": null, \"city\": null, \"companyName\": null, \"country\": null, \"department\": null, \"dirSyncEnabled\": null, \"displayName\": \"Marcus Breyer\", \"facsimileTelephoneNumber\": null, \"givenName\": \"Marcus\", \"jobTitle\": null, \"lastDirSyncTime\": null, \"mail\": \"Marcus@contoso.com\", \"mailNickname\": \"MarcusBreyer\", \"mobile\": null, \"physicalDeliveryOfficeName\": null, \"postalCode\": null, \"provisioningErrors\": [], \"proxyAddresses\": [ \"SMTP:Marcus@contoso.com\" ], \"sipProxyAddress\": null, \"state\": null, \"streetAddress\": null, \"surname\": \"Breyer\", \"telephoneNumber\": null }, { \"odata.type\": \"Microsoft.DirectoryServices.Contact\", \"objectType\": \"Contact\", \"objectId\": \"35110b16-360c-4c4a-93b2-03f065fabd93\", \"deletionTimestamp\": null, \"city\": null, \"companyName\": null, \"country\": null, \"department\": null, \"dirSyncEnabled\": null, \"displayName\": \"Yossi Ran\", \"facsimileTelephoneNumber\": null, \"givenName\": \"Yossi\", \"jobTitle\": null, \"lastDirSyncTime\": null, \"mail\": \"Yossi@contoso.com\", \"mailNickname\": \"YossiRan\", \"mobile\": null, \"physicalDeliveryOfficeName\": null, \"postalCode\": null, \"provisioningErrors\": [], \"proxyAddresses\": [ \"SMTP:Yossi@contoso.com\" ], \"sipProxyAddress\": null, \"state\": null, \"streetAddress\": null, \"surname\": \"Ran\", \"telephoneNumber\": null }, { \"odata.type\": \"Microsoft.DirectoryServices.Contact\", \"objectType\": \"Contact\", \"objectId\": \"7163f3b8-70c9-43d2-b9e1-4467ddaf087a\", \"deletionTimestamp\": null, \"city\": null, \"companyName\": null, \"country\": null, \"department\": null, \"dirSyncEnabled\": null, \"displayName\": \"Jeremy Nelson\", \"facsimileTelephoneNumber\": null, \"givenName\": \"Jeremy\", \"jobTitle\": null, \"lastDirSyncTime\": null, \"mail\": \"Jeremy@contoso.com\", \"mailNickname\": \"JeremyNelson\", \"mobile\": null, \"physicalDeliveryOfficeName\": null, \"postalCode\": null, \"provisioningErrors\": [], \"proxyAddresses\": [ \"SMTP:Jeremy@contoso.com\" ], \"sipProxyAddress\": null, \"state\": null, \"streetAddress\": null, \"surname\": \"Nelson\", \"telephoneNumber\": null }, { \"odata.type\": \"Microsoft.DirectoryServices.Contact\", \"objectType\": \"Contact\", \"objectId\": \"83234b5c-3a10-4108-8f36-39b1addadfdb\", \"deletionTimestamp\": null, \"city\": null, \"companyName\": null, \"country\": null, \"department\": null, \"dirSyncEnabled\": null, \"displayName\": \"David Strome\", \"facsimileTelephoneNumber\": null, \"givenName\": \"David\", \"jobTitle\": null, \"lastDirSyncTime\": null, \"mail\": \"David@contoso.com\", \"mailNickname\": \"DavidStrome\", \"mobile\": null, \"physicalDeliveryOfficeName\": null, \"postalCode\": null, \"provisioningErrors\": [], \"proxyAddresses\": [ \"SMTP:David@contoso.com\" ], \"sipProxyAddress\": null, \"state\": null, \"streetAddress\": null, \"surname\": \"Strome\", \"telephoneNumber\": null }, { \"odata.type\": \"Microsoft.DirectoryServices.Contact\", \"objectType\": \"Contact\", \"objectId\": \"8c1315ce-bf6f-4e26-b24f-c830606ef41c\", \"deletionTimestamp\": null, \"city\": null, \"companyName\": null, \"country\": null, \"department\": null, \"dirSyncEnabled\": null, \"displayName\": \"Holly Holt\", \"facsimileTelephoneNumber\": null, \"givenName\": \"Holly\", \"jobTitle\": null, \"lastDirSyncTime\": null, \"mail\": \"Holly@contoso.com\", \"mailNickname\": \"HollyHolt\", \"mobile\": null, \"physicalDeliveryOfficeName\": null, \"postalCode\": null, \"provisioningErrors\": [], \"proxyAddresses\": [ \"SMTP:Holly@contoso.com\" ], \"sipProxyAddress\": null, \"state\": null, \"streetAddress\": null, \"surname\": \"Holt\", \"telephoneNumber\": null } ] } get contact by id Get a contact by using the object ID. Required scope : Contacts.Read or Contacts.Write Request GET /contacts/{object_id}?api-version Parameters Name Type Value Notes *object_id string 31944231-fd52-4a7f-b32e-7902a01fddf9 The object ID (GUID) of the target contact. *api-version string 1.6 Specifies the version of the Graph API to target. Beginning with version 1.5, the api-version string is represented in major.minor format. Prior releases were represented as date strings: '2013-11-08' and '2013-04-05'. Required. Responses Status Code Description Samples 200 OK. Indicates success. The contact is returned in the response body. Mime type: application/json { \"odata.metadata\": \"https://graph.windows.net/graphdir1.onmicrosoft.com/$metadata#directoryObjects/Microsoft.DirectoryServices.Contact/@Element\", \"odata.type\": \"Microsoft.DirectoryServices.Contact\", \"objectType\": \"Contact\", \"objectId\": \"31944231-fd52-4a7f-b32e-7902a01fddf9\", \"deletionTimestamp\": null, \"city\": null, \"companyName\": null, \"country\": null, \"department\": null, \"dirSyncEnabled\": null, \"displayName\": \"Marcus Breyer\", \"facsimileTelephoneNumber\": null, \"givenName\": \"Marcus\", \"jobTitle\": null, \"lastDirSyncTime\": null, \"mail\": \"Marcus@contoso.com\", \"mailNickname\": \"MarcusBreyer\", \"mobile\": null, \"physicalDeliveryOfficeName\": null, \"postalCode\": null, \"provisioningErrors\": [], \"proxyAddresses\": [ \"SMTP:Marcus@contoso.com\" ], \"sipProxyAddress\": null, \"state\": null, \"streetAddress\": null, \"surname\": \"Breyer\", \"telephoneNumber\": null } update contact Change a contact's properties. Required scope : Contacts.Write Request PATCH /contacts/{object_id}?api-version Parameters Name Type Value Notes *object_id string 7163f3b8-70c9-43d2-b9e1-4467ddaf087a The object ID (GUID) of the target contact. *api-version string 1.6 The version of the Graph API to target. Beginning with version 1.5, the api-version string is represented in major.minor format. Prior releases were represented as date strings: '2013-11-08' and '2013-04-05'. Required. bodyparam this is request body, not real parameter Responses Status Code Description Samples 204 No Content. Indicates success. No response body is returned. delete contact Delete a contact. Required scope : Contacts.Write Request DELETE /contacts/{object_id}[?api-version] Parameters Name Type Value Notes *object_id string 7163f3b8-70c9-43d2-b9e1-4467ddaf087a The object ID (GUID) of the target contact. api-version string 1.6 Specifies the version of the Graph API to target. Beginning with version 1.5, the api-version string is represented in major.minor format. Prior releases were represented as date strings: '2013-11-08' and '2013-04-05'. Required. Responses Status Code Description Samples 204 No Content. Indicates success. get contact manager link Get a link to the contact's manager. Required scope : Contacts.Read or Contacts.Write Request GET /contacts/{object_id}/$links/manager?api-version Parameters Name Type Value Notes *object_id string 31944231-fd52-4a7f-b32e-7902a01fddf9 The object ID (GUID) of the target contact. *api-version string 1.6 The version of the Graph API to target. Beginning with version 1.5, the api-version string is represented in major.minor format. Prior releases were represented as date strings: '2013-11-08' and '2013-04-05'. Required. Responses Status Code Description Samples 200 OK. Indicates success. A link to the contact's manager is returned. Mime type: application/json { \"odata.metadata\": \"https://graph.windows.net/myorganization/$metadata#directoryObjects/$links/manager\", \"url\": \"https://graph.windows.net/myorganization/directoryObjects/35110b16-360c-4c4a-93b2-03f065fabd93/Microsoft.WindowsAzure.ActiveDirectory.Contact\" } 404 Not Found. The requested resource was not found. This can occur if the manager property is not currently set for the specified contact. It can also have other causes, for example, a bad domain. A code and associated message is returned with the error. Mime type: application/json { \"odata.error\": { \"code\": \"Request_ResourceNotFound\", \"message\": { \"lang\": \"en\", \"value\": \"Resource not found for the segment 'manager'.\" } } } update contact manager Update the contact's manager Required scope : Contacts.Write Request PUT /contacts/{object_id}/$links/manager?api-version Parameters Name Type Value Notes *object_id string 31944231-fd52-4a7f-b32e-7902a01fddf9 The object ID (GUID) of the target contact. *api-version string 1.6 The version of the Graph API to target. Beginning with version 1.5, the api-version string is represented in major.minor format. Prior releases were represented as date strings: '2013-11-08' and '2013-04-05'. Required. *bodyparam The request body contains a single property that specifies the URL of the user or contact to add as manager. Responses Status Code Description Samples 204 No Content. Indicates success. No response body is returned. delete contact manager by id Delete the contact's manager. Required scope : Contacts.Write Request DELETE /contacts/{object_id}/$links/manager?api-version Parameters Name Type Value Notes *object_id string 31944231-fd52-4a7f-b32e-7902a01fddf9 The object ID (GUID) of the target contact. *api-version string 1.6 The version of the Graph API to target. Beginning with version 1.5, the api-version string is represented in major.minor format. Prior releases were represented as date strings: '2013-11-08' and '2013-04-05'. Required. Responses Status Code Description Samples 204 No Content. Indicates success. N response body is returned. get contact direct reports links Get a links to the contact's direct reports. Required scope : Contacts.Read or Contacts.Write Request GET /contacts/{object_id}/$links/directReports?api-version Parameters Name Type Value Notes *object_id string 31944231-fd52-4a7f-b32e-7902a01fddf9 The object ID (GUID) of the target contact. *api-version string 1.6 The version of the Graph API to target. Beginning with version 1.5, the api-version string is represented in major.minor format. Prior releases were represented as date strings: '2013-11-08' and '2013-04-05'. Required. Responses Status Code Description Samples 200 OK. Indicates success. One or more direct reports are returned. Mime type: application/json { \"odata.metadata\": \"https://graph.windows.net/myorganization/$metadata#directoryObjects/$links/directReports\", \"value\": [ { \"url\": \"https://graph.windows.net/myorganization/directoryObjects/8c1315ce-bf6f-4e26-b24f-c830606ef41c/Microsoft.DirectoryServices.Contact\" } ] } get contact memberOf links Get a links to the contact's direct group and directory role memberships. Required scope : Contacts.Read or Contacts.Write Request GET /contacts/{object_id}/$links/memberOf?api-version Parameters Name Type Value Notes *object_id string 31944231-fd52-4a7f-b32e-7902a01fddf9 The object ID (GUID) of the target contact. *api-version string 1.6 The version of the Graph API to target. Beginning with version 1.5, the api-version string is represented in major.minor format. Prior releases were represented as date strings: '2013-11-08' and '2013-04-05'. Required. Responses Status Code Description Samples 200 OK. Indicates success. One or more groups and/or directory roles are returned. Mime type: application/json { \"odata.metadata\": \"https://graph.windows.net/myorganization/$metadata#directoryObjects/$links/memberOf\", \"value\": [ { \"url\": \"https://graph.windows.net/myorganization/directoryObjects/12345678-b942-47c9-a10e-a4bee353ce60/Microsoft.DirectoryServices.Group\" } ] }"
  },
  "restapi/petstore.html": {
    "href": "restapi/petstore.html",
    "title": "Pet Store APIs | Selenium.SelfHealing.v3",
    "keywords": "Swagger Petstore Describe APIs in Pet Store pet Description for pet tag addPet Add a new pet to the store Request POST /pet Parameters Name Type Value Notes *body Pet object that needs to be added to the store Responses Status Code Description Samples 405 Invalid input NOTE: Add pet only when you needs. updatePet Update an existing pet Request PUT /pet Parameters Name Type Value Notes *body Pet object that needs to be added to the store Responses Status Code Description Samples 400 Invalid ID supplied 404 Pet not found 405 Validation exception findPetsByStatus Finds Pets by status Multiple status values can be provided with comma separated strings Request GET /pet/findByStatus?status Parameters Name Type Value Notes *status array Status values that need to be considered for filter Responses Status Code Description Samples 200 successful operation 400 Invalid status value findPetsByTags Finds Pets by tags Muliple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing. Request GET /pet/findByTags?tags Parameters Name Type Value Notes *tags array Tags to filter by Responses Status Code Description Samples 200 successful operation 400 Invalid tag value deletePet Deletes a pet Request DELETE /pet/{petId} Parameters Name Type Value Notes api_key string *petId integer Pet id to delete Responses Status Code Description Samples 400 Invalid ID supplied 404 Pet not found getPetById Find pet by ID Returns a single pet Request GET /pet/{petId} Parameters Name Type Value Notes *petId integer ID of pet to return Responses Status Code Description Samples 200 successful operation 400 Invalid ID supplied 404 Pet not found updatePetWithForm Updates a pet in the store with form data Request POST /pet/{petId} Parameters Name Type Value Notes *petId integer ID of pet that needs to be updated name string Updated name of the pet status string Updated status of the pet Responses Status Code Description Samples 405 Invalid input uploadFile uploads an image Request POST /pet/{petId}/uploadImage Parameters Name Type Value Notes *petId integer ID of pet to update additionalMetadata string Additional data to pass to server file file file to upload Responses Status Code Description Samples 200 successful operation store Access to Petstore orders Additional description for store tag addPet Add a new pet to the store Request POST /pet Parameters Name Type Value Notes *body Pet object that needs to be added to the store Responses Status Code Description Samples 405 Invalid input NOTE: Add pet only when you needs. getInventory Returns pet inventories by status Returns a map of status codes to quantities Request GET /store/inventory Responses Status Code Description Samples 200 successful operation placeOrder Place an order for a pet Request POST /store/order Parameters Name Type Value Notes *body order placed for purchasing the pet Responses Status Code Description Samples 200 successful operation 400 Invalid Order deleteOrder Delete purchase order by ID For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors Request DELETE /store/order/{orderId} Parameters Name Type Value Notes *orderId integer ID of the order that needs to be deleted Responses Status Code Description Samples 400 Invalid ID supplied 404 Order not found getOrderById Find purchase order by ID For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions Request GET /store/order/{orderId} Parameters Name Type Value Notes *orderId integer ID of pet that needs to be fetched Responses Status Code Description Samples 200 successful operation 400 Invalid ID supplied 404 Order not found user Operations about user createUser Create user This can only be done by the logged in user. Request POST /user Parameters Name Type Value Notes *body Created user object Responses Status Code Description Samples default successful operation createUsersWithArrayInput Creates list of users with given input array Request POST /user/createWithArray Parameters Name Type Value Notes *body List of user object Responses Status Code Description Samples default successful operation createUsersWithListInput Creates list of users with given input array Request POST /user/createWithList Parameters Name Type Value Notes *body List of user object Responses Status Code Description Samples default successful operation loginUser Logs user into the system Request GET /user/login?username&password Parameters Name Type Value Notes *username string The user name for login *password string The password for login in clear text Responses Status Code Description Samples 200 successful operation 400 Invalid username/password supplied logoutUser Logs out current logged in user session Request GET /user/logout Responses Status Code Description Samples default successful operation deleteUser Delete user This can only be done by the logged in user. Request DELETE /user/{username} Parameters Name Type Value Notes *username string The name that needs to be deleted Responses Status Code Description Samples 400 Invalid username supplied 404 User not found getUserByName Get user by user name Request GET /user/{username} Parameters Name Type Value Notes *username string The name that needs to be fetched. Use user1 for testing. Responses Status Code Description Samples 200 successful operation 400 Invalid username supplied 404 User not found Other APIs updateUser Updated user This can only be done by the logged in user. Request PUT /user/{username} Parameters Name Type Value Notes *username string name that need to be updated *body Updated user object Responses Status Code Description Samples 400 Invalid user supplied 404 User not found See Alsos See other REST APIs: Contacts API"
  }
}